- include_tasks: "{{ stage }}_iam.yml"

- name: Download the artifacts from XVT public repo s3
  get_url:
    url: "{{ ecs_auto_scale_artifact_repository_url }}"
    dest: "{{ inventory_dir }}/../"

- name: upload zip file to s3 bucket
  aws_s3:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    bucket: "{{ s3_buckets['c-infra-build'].name }}"
    object: "{{ ecs_auto_scale_artifact_file_name }}"
    mode: put
    src: "{{ inventory_dir }}/../{{ ecs_auto_scale_artifact_file_name }}"

- name: clean up local downloaded zip file
  file:
    path: "{{ inventory_dir }}/../{{ ecs_auto_scale_artifact_file_name }}"
    state: absent

- name: Update ecs auto scale lambda
  lambda:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    name: "{{ ecs_cluster }}-{{ lambda_function_name }}"
    state: "{{ 'present' if stage == 'create' else 'absent' }}"
    s3_bucket: "{{ s3_buckets['c-infra-build'].name }}"
    s3_key: "{{ ecs_auto_scale_artifact_file_name }}"
    runtime: python3.6
    role: "ecs-auto-scale"
    handler: "{{ lambda_function_name }}.lambda_handler"
    timeout: 30
    environment_variables:
      AUTO_SCALING_GROUP: "{{ asg_name }}"
      ECS_CLUSTER: "{{ ecs_cluster }}"
  register: ecs_auto_scale_lambda

- name: Update the cloudwatch event to use with ECS Event monitor Lambda
  cloudwatchevent_rule:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    name: "{{ ecs_cluster }}-ecs-auto-scale-rule"
    description: "Monitor ECS events for {{ ecs_cluster }} cluster"
    targets:
      - id: "{{ ecs_auto_scale_lambda.configuration.function_name }}"
        # Strip off the version number from the arn
        arn: "{{ (ecs_auto_scale_lambda.configuration.function_arn.split(':')[:-1])|join(':') }}"
    schedule_expression: "{{ ecs_auto_scale_schedule }}"
    state: present
  register: cloudwatch_aws_event

- name: create lambda policy to allow aws events to invoke it
  lambda_policy:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    state: present
    function_name: "{{ ecs_auto_scale_lambda.configuration.function_name }}"
    statement_id: "{{ ecs_auto_scale_lambda.configuration.function_name }}"
    action: "lambda:InvokeFunction"
    principal: events.amazonaws.com
    source_arn: "{{ cloudwatch_aws_event.rule.arn }}"
